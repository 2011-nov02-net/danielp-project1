@model MyStore.WebApp.Models.StoreViewModels.CustomerViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>CustomerViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MiddleInitial" class="control-label"></label>
                <input asp-for="MiddleInitial" class="form-control" />
                <span asp-validation-for="MiddleInitial" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>

            <!-- TODO Make this work:
                asp-items="@@ViewData["Stores"]" -->
            <select asp-for="HomeStore" ,class="form-group" id="HomeStore" , name="HomeStore">
                <option>None</option>
                @foreach (string storename in (List<String>)ViewData["Stores"])
                {
                    <option>
                        @storename
                    </option>
                }
            </select>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Choose">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
